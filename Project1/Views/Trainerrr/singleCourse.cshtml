@section Styles {

    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f8f8f8;
        }

        .product_image_area {
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
            padding: 20px;
            margin-top: 20px;
        }

            .product_image_area h3 {
                font-size: 28px;
                color: #333;
                margin-bottom: 20px;
            }

        .add_comment_section {
            background-color: #f9f9f9;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

            .add_comment_section h3 {
                margin-bottom: 20px;
                font-size: 24px;
                color: #333;
            }

            .add_comment_section label {
                font-weight: bold;
                margin-bottom: 10px;
                display: block;
            }

            .add_comment_section input[type="number"],
            .add_comment_section textarea {
                width: 100%;
                padding: 10px;
                border: 1px solid #ccc;
                border-radius: 5px;
                margin-bottom: 20px;
                font-size: 16px;
            }

            .add_comment_section button {
                background-color: #C08E5D;
                color: white;
                padding: 12px 20px;
                border: none;
                border-radius: 5px;
                cursor: pointer;
                font-size: 18px;
            }

                .add_comment_section button:hover {
                    background-color: #90663B;
                }

        .comment-list {
            max-height: 300px; /* 評論區最大高度 */
            overflow-y: auto; /* 垂直滾動 */
            padding: 10px; /* 內邊距 */
            border: 1px solid #ccc; /* 邊框 */
            border-radius: 5px; /* 圓角 */
            background-color: #f9f9f9; /* 背景色 */
            margin-bottom: 20px; /* 下邊距 */
        }

        .comment {
            padding: 10px; /* 評論框內邊距 */
            border-bottom: 1px solid #ddd; /* 下邊框 */
            margin-bottom: 10px; /* 下邊距 */
        }

            .comment:last-child {
                border-bottom: none; /* 最後一個評論框去掉下邊框 */
            }

        .user-info {
            font-weight: bold; /* 用戶信息加粗 */
        }

        .comment-date {
            font-size: 12px; /* 評論日期字體大小 */
            color: #888; /* 評論日期文字顏色 */
        }

        .tooltip {
            position: absolute;
            display: none;
            background-color: grey;
            color:black;
            border: 1px solid #ccc;
            padding: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            z-index: 1000;
        }

    </style>
}


<div class="product_image_area">
    <div class="container">
        <div id="app" class="row s_product_inner">
            <div class="col-lg-6" v-if="course">
                <div class="s_Product_carousel">
                    <div class="single-prd-item">
                        <img :src="course.thumbnailUrl" class="img-fluid" alt="">
                    </div>
                    <div class="single-prd-item">
                        <img :src="course.thumbnailUrl" class="img-fluid" alt="">
                    </div>
                    <div class="single-prd-item">
                        <img :src="course.thumbnailUrl" class="img-fluid" alt="">
                    </div>
                </div>
                <div class="add_comment_section mt-5">
                    <h3 class="mb-30">添加評論</h3>
                    <div>
                        <label for="rating">評分:</label>
                        <input type="number" v-model="newComment.rating" min="1" max="5" required @@keydown.prevent="checkKey($event)">
                    </div>
                    <div>
                        <label for="comment">評論:</label>
                        <textarea v-model="newComment.comment" required></textarea>
                    </div>
                    <button class="primary-btn" v-on:click.prevent="addComment">提交評論</button>
                </div>
                <div id="error-message" style="color: red;"></div>
            </div>
            <div class="col-lg-5 offset-lg-1">
                <div class="s_product_text">
                    <h3> {{course.courseName}}</h3>
                    <h2>價格: {{course.price}}</h2>
                    <ul class="list">
                        <li><span>寵物分類: {{course.petCategoryName}}</span></li>
                        <li><span>課程類別: {{course.courseCategoryName}}</span></li>
                        <li><span>課程類型: {{course.courseTypeName}}</span></li>
                        <li><span>人數上限: {{course.maxParticipants}}</span></li>
                        <li><span>上課地區: {{course.locationName}}</span></li>
                    </ul>
                    <p>課程簡介: {{course.description}}</p>
                </div>
                <h3 class="mb-30">已開放上課時間</h3>

                <div v-if="schedules.length > 0">
                    <div v-for="(schedule, index) in schedules" :key="schedule.schedulerID" class="single-element-widget mt-30">
                        <div class="d-flex justify-content-between">
                            <p>{{ schedule.scheduler }}</p>
                            <div class="primary-checkbox">
                                <input type="checkbox" :id="'checkbox-' + index" :value="schedule.schedulerID" v-model="selectedSchedules">
                                <label :for="'checkbox-' + index"></label>
                            </div>
                        </div>
                    </div>
                </div>
                <div v-else><p>此門課尚未開放上課時段</p></div>
                <div id='calendar'></div>
                <div id="tooltip" class="tooltip"></div>
                <div class="card_area d-flex align-items-center">
                    <a asp-controller="Browse" asp-action="ViewCart" class="primary-btn" v-on:click.prevent="addToCart">加入購物車</a>
                </div>
            </div>
            <div class="container">
                <h3 class="mt-5 mb-4">學生評論</h3>
                <div class="comment-list">
                    <div class="comment" v-for="courseRating in courseRatings">
                        <div class="user-info mb-2">
                            <strong>{{ courseRating.userName }}</strong> - <span>評分: {{ courseRating.rating }}</span>
                        </div>
                        <p class="mb-2">{{ courseRating.comment }}</p>
                        <p class="comment-date">{{ courseRating.ratingDate }}</p>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

@section Scripts {

    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.30.1/moment.min.js"></script>

    <script>
        var vueApp = {
            data() {
                return {
                    course: [],
                    schedules: [],
                    selectedSchedules: [],
                    newComment: {
                        rating: '',
                        comment: ''
                    },
                    memberID: '',
                    courseRatings: [],

                }
            },
            mounted() {
                this.memberID = sessionStorage.getItem("MemID");
                const cid = sessionStorage.getItem("ActID");
                const url1 = `/Trainerrr/getsingleCourse?id=${cid}`;
                axios.get(url1)
                    .then(response => {
                        this.course = response.data;
                    })
                    .catch(error => {
                        alert('Error fetching course data');
                        console.error(error);
                    });

                const url2 = `/Trainerrr/getClassSchedule?id=${cid}`;
                axios.get(url2)
                    .then(response => {
                        if (response.data.length > 0) {
                            this.schedules = response.data.map(e => ({
                                schedulerID: e.schedulerID,
                                scheduler: moment(e.scheduler).format('YYYY/MM/DD'),
                                courseID: e.courseID
                            }));
                        }
                    })
                    .catch(error => {
                        alert('Error fetching schedules');
                        console.error(error);
                    });

                const url3 = `/Browse/ViewRating?id=${cid}`;
                axios.get(url3).then(response => {
                    if (response.data.length > 0) {
                        this.courseRatings = response.data.map(e => ({
                            userName: e.userName,
                            rating: e.rating,
                            comment: e.comment,
                            ratingDate: moment(e.ratingDate).format('YYYY/MM/DD'),
                        }));
                    }
                })
            },
            methods: {
                addToCart() {
                    if (this.selectedSchedules.length === 0) {
                        alert('請選擇至少一個時間');
                        return;
                    }
                    const cid = sessionStorage.getItem("ActID");
                    axios.post('/Browse/AddToCart', {
                        courseID: cid,
                        memberID: this.memberID,
                        selectedSchedules: this.selectedSchedules
                    })
                        .then(response => {
                            window.location.href = '/Browse/ViewCart/1';
                        })
                        .catch(error => {
                            alert('所選時段已在購物車中 不能重複添加相同的課程和時段');
                            console.error(error);
                        });
                    
                },
                addComment() {
                    if (!this.memberID) {
                        alert('無法新增評論 請先登入');
                        return;
                    }
                    const cid = sessionStorage.getItem("ActID");
                    axios.post('/Browse/AddCourseRating', {
                        courseID: cid,
                        memberID: this.memberID,
                        rating: this.newComment.rating,
                        comment: this.newComment.comment
                    })
                        .then(response => {
                            alert('評論新增成功');
                        })
                        .catch(error => {
                            if (error.response && error.response.data.message) {
                                alert(error.response.data.message);
                            } else {
                                alert('無法新增評論，請稍後再試');
                            }
                            console.error(error);
                        });
                },
                checkKey(event) {
                    // Allow only arrow keys, backspace, tab, and delete keys
                    const allowedKeys = [8, 9, 37, 38, 39, 40, 46];
                    if (allowedKeys.includes(event.keyCode)) {
                        return;
                    }
                    // Prevent typing any other key
                    event.preventDefault();
                }
            }
        }


        var app = Vue.createApp(vueApp).mount("#app");

        const cid = sessionStorage.getItem("ActID");

        document.addEventListener('DOMContentLoaded', function () {
            var calendarEl = document.getElementById('calendar');
            var tooltip = document.getElementById('tooltip');

            axios.get(`/Trainerrr/getClassSchedule?id=${cid}`).then(response => {
                const schedules = response.data;
                const events = schedules.map(schedule => {
                    return {
                        allDay:true,
                        start: schedule.scheduler,
                        title: "剩" + schedule.enrollmentCount + "名",
                        display: "Background",
                    };
                });
                var calendar = new FullCalendar.Calendar(calendarEl, {
                    eventMouseEnter: function (info) {
                        console.log('Mouse entered event');
                        const enrollmentCount = schedules.filter(s => s.courseID === info.event.extendedProps.courseID);
                        console.log(enrollmentCount);
                        tooltip.innerHTML = `<strong>剩餘名額:</strong> ${enrollmentCount}位<br>`;
                        tooltip.style.display = 'block';
                        tooltip.style.left = info.jsEvent.pageX + 'px';
                        tooltip.style.top = info.jsEvent.pageY + 'px';
                    },
                    eventMouseLeave: function (info) {
                        tooltip.style.display = 'none';
                    },
                    initialView: 'dayGridMonth',
                    events: events,         
                });
                calendar.render();
            }).catch(error => {
                console.error('API error:', error.response.data);
                alert(error.response.data.message);
            });
        });
    </script>

        </script>
}
