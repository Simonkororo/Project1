// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project1.Data;

#nullable disable

namespace Project1.Migrations
{
    [DbContext(typeof(ProjectDbContext))]
    [Migration("20240514082931_update data12")]
    partial class updatedata12
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Project1.Models.Blog", b =>
                {
                    b.Property<int>("BlogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlogID"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PostedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TrainerID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BlogID");

                    b.ToTable("Blog");
                });

            modelBuilder.Entity("Project1.Models.ClassSchedule", b =>
                {
                    b.Property<int>("SchedulerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SchedulerID"));

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Scheduler")
                        .HasColumnType("datetime2");

                    b.HasKey("SchedulerID");

                    b.ToTable("ClassSchedule");
                });

            modelBuilder.Entity("Project1.Models.Course", b =>
                {
                    b.Property<int>("CourseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseID"));

                    b.Property<string>("ApprovalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Clicks")
                        .HasColumnType("int");

                    b.Property<int>("CourseCategoryID")
                        .HasColumnType("int");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CourseTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EnrollmentCount")
                        .HasColumnType("int");

                    b.Property<int?>("LocationID")
                        .HasColumnType("int");

                    b.Property<int?>("MaxParticipants")
                        .HasColumnType("int");

                    b.Property<int>("PetCategoryID")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ThumbnailUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrainerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("CourseID");

                    b.ToTable("Course");

                    b.HasData(
                        new
                        {
                            CourseID = 1,
                            ApprovalStatus = "通過",
                            Clicks = 21,
                            CourseCategoryID = 1,
                            CourseName = "幼犬初級訓練",
                            CourseTypeID = 1,
                            CreatedAt = new DateTime(2024, 5, 14, 8, 29, 31, 257, DateTimeKind.Utc).AddTicks(7812),
                            Description = "教您如何教導您的狗基本指令和技巧，如坐下、待命和走路等等。",
                            EnrollmentCount = 0,
                            LocationID = 1,
                            MaxParticipants = 1,
                            PetCategoryID = 1,
                            Price = 100m,
                            ThumbnailUrl = "/Img/CourseThumbnail/course1.jpg",
                            TrainerID = 1,
                            UpdatedAt = new DateTime(2024, 5, 14, 8, 29, 31, 257, DateTimeKind.Utc).AddTicks(7812)
                        });
                });

            modelBuilder.Entity("Project1.Models.CourseCategory", b =>
                {
                    b.Property<int>("CourseCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseCategoryID"));

                    b.Property<string>("CourseCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseCategoryID");

                    b.ToTable("CourseCategory");

                    b.HasData(
                        new
                        {
                            CourseCategoryID = 1,
                            CourseCategoryName = "運動"
                        },
                        new
                        {
                            CourseCategoryID = 2,
                            CourseCategoryName = "技能"
                        },
                        new
                        {
                            CourseCategoryID = 3,
                            CourseCategoryName = "陪玩"
                        });
                });

            modelBuilder.Entity("Project1.Models.CourseRating", b =>
                {
                    b.Property<int>("CourseRatingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseRatingID"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("RatingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TrainerID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("CourseRatingID");

                    b.ToTable("CourseRating");

                    b.HasData(
                        new
                        {
                            CourseRatingID = 1,
                            Comment = "好學習",
                            CourseID = 1,
                            Rating = 5,
                            RatingDate = new DateTime(2024, 5, 14, 8, 29, 31, 257, DateTimeKind.Utc).AddTicks(7830),
                            TrainerID = 1,
                            UserID = 1
                        },
                        new
                        {
                            CourseRatingID = 2,
                            Comment = "好學習",
                            CourseID = 1,
                            Rating = 4,
                            RatingDate = new DateTime(2024, 5, 14, 8, 29, 31, 257, DateTimeKind.Utc).AddTicks(7831),
                            TrainerID = 1,
                            UserID = 3
                        },
                        new
                        {
                            CourseRatingID = 3,
                            Comment = "好學習",
                            CourseID = 1,
                            Rating = 3,
                            RatingDate = new DateTime(2024, 5, 14, 8, 29, 31, 257, DateTimeKind.Utc).AddTicks(7832),
                            TrainerID = 1,
                            UserID = 2
                        },
                        new
                        {
                            CourseRatingID = 4,
                            Comment = "好學習",
                            CourseID = 2,
                            Rating = 4,
                            RatingDate = new DateTime(2024, 5, 14, 8, 29, 31, 257, DateTimeKind.Utc).AddTicks(7833),
                            TrainerID = 1,
                            UserID = 1
                        },
                        new
                        {
                            CourseRatingID = 5,
                            Comment = "好學習",
                            CourseID = 2,
                            Rating = 5,
                            RatingDate = new DateTime(2024, 5, 14, 8, 29, 31, 257, DateTimeKind.Utc).AddTicks(7834),
                            TrainerID = 1,
                            UserID = 3
                        },
                        new
                        {
                            CourseRatingID = 6,
                            Comment = "好學習",
                            CourseID = 2,
                            Rating = 5,
                            RatingDate = new DateTime(2024, 5, 14, 8, 29, 31, 257, DateTimeKind.Utc).AddTicks(7835),
                            TrainerID = 1,
                            UserID = 2
                        },
                        new
                        {
                            CourseRatingID = 7,
                            Comment = "好學習",
                            CourseID = 3,
                            Rating = 5,
                            RatingDate = new DateTime(2024, 5, 14, 8, 29, 31, 257, DateTimeKind.Utc).AddTicks(7836),
                            TrainerID = 1,
                            UserID = 1
                        },
                        new
                        {
                            CourseRatingID = 8,
                            Comment = "好學習",
                            CourseID = 3,
                            Rating = 5,
                            RatingDate = new DateTime(2024, 5, 14, 8, 29, 31, 257, DateTimeKind.Utc).AddTicks(7837),
                            TrainerID = 1,
                            UserID = 3
                        },
                        new
                        {
                            CourseRatingID = 9,
                            Comment = "好學習",
                            CourseID = 3,
                            Rating = 3,
                            RatingDate = new DateTime(2024, 5, 14, 8, 29, 31, 257, DateTimeKind.Utc).AddTicks(7838),
                            TrainerID = 1,
                            UserID = 2
                        },
                        new
                        {
                            CourseRatingID = 10,
                            Comment = "好學習",
                            CourseID = 4,
                            Rating = 3,
                            RatingDate = new DateTime(2024, 5, 14, 8, 29, 31, 257, DateTimeKind.Utc).AddTicks(7839),
                            TrainerID = 1,
                            UserID = 1
                        },
                        new
                        {
                            CourseRatingID = 11,
                            Comment = "好學習",
                            CourseID = 4,
                            Rating = 3,
                            RatingDate = new DateTime(2024, 5, 14, 8, 29, 31, 257, DateTimeKind.Utc).AddTicks(7840),
                            TrainerID = 1,
                            UserID = 3
                        },
                        new
                        {
                            CourseRatingID = 12,
                            Comment = "好學習",
                            CourseID = 4,
                            Rating = 4,
                            RatingDate = new DateTime(2024, 5, 14, 8, 29, 31, 257, DateTimeKind.Utc).AddTicks(7841),
                            TrainerID = 1,
                            UserID = 2
                        },
                        new
                        {
                            CourseRatingID = 13,
                            Comment = "好學習",
                            CourseID = 5,
                            Rating = 5,
                            RatingDate = new DateTime(2024, 5, 14, 8, 29, 31, 257, DateTimeKind.Utc).AddTicks(7842),
                            TrainerID = 1,
                            UserID = 1
                        },
                        new
                        {
                            CourseRatingID = 14,
                            Comment = "好學習",
                            CourseID = 5,
                            Rating = 5,
                            RatingDate = new DateTime(2024, 5, 14, 8, 29, 31, 257, DateTimeKind.Utc).AddTicks(7843),
                            TrainerID = 1,
                            UserID = 3
                        },
                        new
                        {
                            CourseRatingID = 15,
                            Comment = "好學習",
                            CourseID = 5,
                            Rating = 5,
                            RatingDate = new DateTime(2024, 5, 14, 8, 29, 31, 257, DateTimeKind.Utc).AddTicks(7844),
                            TrainerID = 1,
                            UserID = 2
                        });
                });

            modelBuilder.Entity("Project1.Models.CourseType", b =>
                {
                    b.Property<int>("CourseTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseTypeID"));

                    b.Property<string>("CourseTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseTypeID");

                    b.ToTable("CourseType");

                    b.HasData(
                        new
                        {
                            CourseTypeID = 1,
                            CourseTypeName = "一對一"
                        },
                        new
                        {
                            CourseTypeID = 2,
                            CourseTypeName = "團課"
                        });
                });

            modelBuilder.Entity("Project1.Models.Discount", b =>
                {
                    b.Property<int>("DiscountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscountID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiscountDESC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiscountName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("DiscountPercentage")
                        .HasColumnType("float");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DiscountID");

                    b.ToTable("Discount");
                });

            modelBuilder.Entity("Project1.Models.Images", b =>
                {
                    b.Property<int>("ImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageID"));

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrianerID")
                        .HasColumnType("int");

                    b.HasKey("ImageID");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Project1.Models.Location", b =>
                {
                    b.Property<int>("LocationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationID"));

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationID");

                    b.ToTable("Location");

                    b.HasData(
                        new
                        {
                            LocationID = 1,
                            LocationName = "臺北市"
                        },
                        new
                        {
                            LocationID = 2,
                            LocationName = "新北市"
                        },
                        new
                        {
                            LocationID = 3,
                            LocationName = "桃園市"
                        },
                        new
                        {
                            LocationID = 4,
                            LocationName = "臺中市"
                        },
                        new
                        {
                            LocationID = 5,
                            LocationName = "臺南市"
                        },
                        new
                        {
                            LocationID = 6,
                            LocationName = "高雄市"
                        },
                        new
                        {
                            LocationID = 7,
                            LocationName = "基隆市"
                        },
                        new
                        {
                            LocationID = 8,
                            LocationName = "新竹市"
                        },
                        new
                        {
                            LocationID = 9,
                            LocationName = "嘉義市"
                        },
                        new
                        {
                            LocationID = 10,
                            LocationName = "新竹縣"
                        },
                        new
                        {
                            LocationID = 11,
                            LocationName = "苗栗縣"
                        },
                        new
                        {
                            LocationID = 12,
                            LocationName = "彰化縣"
                        },
                        new
                        {
                            LocationID = 13,
                            LocationName = "南投縣"
                        },
                        new
                        {
                            LocationID = 14,
                            LocationName = "雲林縣"
                        },
                        new
                        {
                            LocationID = 15,
                            LocationName = "嘉義縣"
                        },
                        new
                        {
                            LocationID = 16,
                            LocationName = "屏東縣"
                        },
                        new
                        {
                            LocationID = 17,
                            LocationName = "宜蘭縣"
                        },
                        new
                        {
                            LocationID = 18,
                            LocationName = "花蓮縣"
                        },
                        new
                        {
                            LocationID = 19,
                            LocationName = "臺東縣"
                        },
                        new
                        {
                            LocationID = 20,
                            LocationName = "澎湖縣"
                        },
                        new
                        {
                            LocationID = 21,
                            LocationName = "金門縣"
                        },
                        new
                        {
                            LocationID = 22,
                            LocationName = "連江縣"
                        });
                });

            modelBuilder.Entity("Project1.Models.Member", b =>
                {
                    b.Property<int>("MemberID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberID"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdministrator")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTrainer")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResidenceArea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MemberID");

                    b.ToTable("Member");

                    b.HasData(
                        new
                        {
                            MemberID = 1,
                            Birthday = new DateTime(1995, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "wang@example.com",
                            IsAdministrator = false,
                            IsTrainer = false,
                            Name = "林宜萱",
                            Phone = "0987654321",
                            RegistrationDate = new DateTime(2024, 5, 14, 16, 29, 31, 257, DateTimeKind.Local).AddTicks(7866),
                            ResidenceArea = "臺北市"
                        });
                });

            modelBuilder.Entity("Project1.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DiscountID")
                        .HasColumnType("int");

                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderID");

                    b.ToTable("Order");

                    b.HasData(
                        new
                        {
                            OrderID = 1,
                            CreatedAt = new DateTime(2024, 5, 14, 16, 29, 31, 257, DateTimeKind.Local).AddTicks(7752),
                            MemberID = 1,
                            OrderDate = new DateTime(2024, 5, 14, 16, 29, 31, 257, DateTimeKind.Local).AddTicks(7743),
                            OrderStatus = "Processing",
                            TotalAmount = 100m
                        },
                        new
                        {
                            OrderID = 2,
                            CreatedAt = new DateTime(2024, 5, 14, 16, 29, 31, 257, DateTimeKind.Local).AddTicks(7754),
                            MemberID = 2,
                            OrderDate = new DateTime(2024, 5, 14, 16, 29, 31, 257, DateTimeKind.Local).AddTicks(7754),
                            OrderStatus = "Delivered",
                            TotalAmount = 200m
                        },
                        new
                        {
                            OrderID = 3,
                            CreatedAt = new DateTime(2024, 5, 14, 16, 29, 31, 257, DateTimeKind.Local).AddTicks(7756),
                            MemberID = 3,
                            OrderDate = new DateTime(2024, 5, 14, 16, 29, 31, 257, DateTimeKind.Local).AddTicks(7755),
                            OrderStatus = "Cancelled",
                            TotalAmount = 300m
                        },
                        new
                        {
                            OrderID = 4,
                            CreatedAt = new DateTime(2024, 5, 14, 16, 29, 31, 257, DateTimeKind.Local).AddTicks(7757),
                            MemberID = 4,
                            OrderDate = new DateTime(2024, 5, 14, 16, 29, 31, 257, DateTimeKind.Local).AddTicks(7757),
                            OrderStatus = "Processing",
                            TotalAmount = 800m
                        },
                        new
                        {
                            OrderID = 5,
                            CreatedAt = new DateTime(2024, 5, 14, 16, 29, 31, 257, DateTimeKind.Local).AddTicks(7759),
                            MemberID = 5,
                            OrderDate = new DateTime(2024, 5, 14, 16, 29, 31, 257, DateTimeKind.Local).AddTicks(7758),
                            OrderStatus = "Shipped",
                            TotalAmount = 1000m
                        });
                });

            modelBuilder.Entity("Project1.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailID"));

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderDetailID");

                    b.ToTable("OrderDetail");

                    b.HasData(
                        new
                        {
                            OrderDetailID = 1,
                            CourseID = 1,
                            CreatedAt = new DateTime(2024, 5, 14, 8, 29, 31, 257, DateTimeKind.Utc).AddTicks(7779),
                            OrderID = 1,
                            Quantity = 2,
                            UnitPrice = 100m
                        },
                        new
                        {
                            OrderDetailID = 2,
                            CourseID = 2,
                            CreatedAt = new DateTime(2024, 5, 14, 8, 29, 31, 257, DateTimeKind.Utc).AddTicks(7780),
                            OrderID = 1,
                            Quantity = 4,
                            UnitPrice = 100m
                        },
                        new
                        {
                            OrderDetailID = 3,
                            CourseID = 3,
                            CreatedAt = new DateTime(2024, 5, 14, 8, 29, 31, 257, DateTimeKind.Utc).AddTicks(7781),
                            OrderID = 1,
                            Quantity = 3,
                            UnitPrice = 100m
                        },
                        new
                        {
                            OrderDetailID = 4,
                            CourseID = 4,
                            CreatedAt = new DateTime(2024, 5, 14, 8, 29, 31, 257, DateTimeKind.Utc).AddTicks(7782),
                            OrderID = 2,
                            Quantity = 3,
                            UnitPrice = 100m
                        },
                        new
                        {
                            OrderDetailID = 5,
                            CourseID = 5,
                            CreatedAt = new DateTime(2024, 5, 14, 8, 29, 31, 257, DateTimeKind.Utc).AddTicks(7784),
                            OrderID = 2,
                            Quantity = 3,
                            UnitPrice = 100m
                        },
                        new
                        {
                            OrderDetailID = 6,
                            CourseID = 3,
                            CreatedAt = new DateTime(2024, 5, 14, 8, 29, 31, 257, DateTimeKind.Utc).AddTicks(7785),
                            OrderID = 2,
                            Quantity = 2,
                            UnitPrice = 100m
                        },
                        new
                        {
                            OrderDetailID = 7,
                            CourseID = 3,
                            CreatedAt = new DateTime(2024, 5, 14, 8, 29, 31, 257, DateTimeKind.Utc).AddTicks(7786),
                            OrderID = 3,
                            Quantity = 5,
                            UnitPrice = 100m
                        },
                        new
                        {
                            OrderDetailID = 8,
                            CourseID = 4,
                            CreatedAt = new DateTime(2024, 5, 14, 8, 29, 31, 257, DateTimeKind.Utc).AddTicks(7787),
                            OrderID = 3,
                            Quantity = 7,
                            UnitPrice = 100m
                        },
                        new
                        {
                            OrderDetailID = 9,
                            CourseID = 2,
                            CreatedAt = new DateTime(2024, 5, 14, 8, 29, 31, 257, DateTimeKind.Utc).AddTicks(7788),
                            OrderID = 4,
                            Quantity = 6,
                            UnitPrice = 100m
                        },
                        new
                        {
                            OrderDetailID = 10,
                            CourseID = 3,
                            CreatedAt = new DateTime(2024, 5, 14, 8, 29, 31, 257, DateTimeKind.Utc).AddTicks(7789),
                            OrderID = 4,
                            Quantity = 8,
                            UnitPrice = 100m
                        },
                        new
                        {
                            OrderDetailID = 11,
                            CourseID = 3,
                            CreatedAt = new DateTime(2024, 5, 14, 8, 29, 31, 257, DateTimeKind.Utc).AddTicks(7790),
                            OrderID = 4,
                            Quantity = 8,
                            UnitPrice = 100m
                        });
                });

            modelBuilder.Entity("Project1.Models.Payment", b =>
                {
                    b.Property<int>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentID"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentID");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("Project1.Models.Pet", b =>
                {
                    b.Property<int>("PetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PetID"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.Property<string>("PetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PetType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("PetID");

                    b.ToTable("Pet");
                });

            modelBuilder.Entity("Project1.Models.PetCategory", b =>
                {
                    b.Property<int>("PetCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PetCategoryID"));

                    b.Property<string>("PetCategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PetCategoryID");

                    b.ToTable("PetCategory");

                    b.HasData(
                        new
                        {
                            PetCategoryID = 1,
                            PetCategoryName = "狗"
                        },
                        new
                        {
                            PetCategoryID = 2,
                            PetCategoryName = "貓"
                        });
                });

            modelBuilder.Entity("Project1.Models.ShoppingCart", b =>
                {
                    b.Property<int>("CartID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartID"));

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MemberID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("CartID");

                    b.ToTable("Cart");

                    b.HasData(
                        new
                        {
                            CartID = 1,
                            CourseID = 1,
                            CreatedAt = new DateTime(2024, 5, 14, 8, 29, 31, 257, DateTimeKind.Utc).AddTicks(7669),
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("Project1.Models.Specialization", b =>
                {
                    b.Property<int>("SpecializationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpecializationID"));

                    b.Property<string>("SpecializationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SpecializationID");

                    b.ToTable("Specialization");

                    b.HasData(
                        new
                        {
                            SpecializationID = 1,
                            SpecializationName = "犬隻行為調教"
                        },
                        new
                        {
                            SpecializationID = 2,
                            SpecializationName = "貓咪行為諮詢"
                        },
                        new
                        {
                            SpecializationID = 3,
                            SpecializationName = "犬隻服從訓練"
                        },
                        new
                        {
                            SpecializationID = 4,
                            SpecializationName = "貓咪基礎訓練"
                        },
                        new
                        {
                            SpecializationID = 5,
                            SpecializationName = "犬隻行為改善"
                        },
                        new
                        {
                            SpecializationID = 6,
                            SpecializationName = "貓咪行為矯正"
                        },
                        new
                        {
                            SpecializationID = 7,
                            SpecializationName = "犬隻服從訓練"
                        },
                        new
                        {
                            SpecializationID = 8,
                            SpecializationName = "犬隻基礎訓練"
                        });
                });

            modelBuilder.Entity("Project1.Models.Trainer", b =>
                {
                    b.Property<int>("TrainerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrainerID"));

                    b.Property<string>("Experience")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qualifications")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpecializationID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrainerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TrainerID");

                    b.ToTable("Trainer");

                    b.HasData(
                        new
                        {
                            TrainerID = 1,
                            Experience = "具有10年專業犬隻訓練經驗",
                            MemberID = 1,
                            Qualifications = "認證專業犬隻訓練師 (CPDT-KA)",
                            SpecializationID = 1,
                            Status = "已審核",
                            TrainerName = "林宜萱"
                        });
                });

            modelBuilder.Entity("Project1.Models.TrainerServiceArea", b =>
                {
                    b.Property<int>("TeachingAreaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeachingAreaID"));

                    b.Property<int>("LocationID")
                        .HasColumnType("int");

                    b.Property<int>("TrainerID")
                        .HasColumnType("int");

                    b.HasKey("TeachingAreaID");

                    b.ToTable("TrainerServiceArea");
                });
#pragma warning restore 612, 618
        }
    }
}
