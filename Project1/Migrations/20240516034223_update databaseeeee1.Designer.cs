// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project1.Data;

#nullable disable

namespace Project1.Migrations
{
    [DbContext(typeof(ProjectDbContext))]
    [Migration("20240516034223_update databaseeeee1")]
    partial class updatedatabaseeeee1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Project1.Models.Blog", b =>
                {
                    b.Property<int>("BlogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlogID"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PostedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TrainerID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BlogID");

                    b.ToTable("Blog");
                });

            modelBuilder.Entity("Project1.Models.ClassSchedule", b =>
                {
                    b.Property<int>("SchedulerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SchedulerID"));

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Scheduler")
                        .HasColumnType("datetime2");

                    b.HasKey("SchedulerID");

                    b.ToTable("ClassSchedule");
                });

            modelBuilder.Entity("Project1.Models.Course", b =>
                {
                    b.Property<int>("CourseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseID"));

                    b.Property<string>("ApprovalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Clicks")
                        .HasColumnType("int");

                    b.Property<int>("CourseCategoryID")
                        .HasColumnType("int");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EnrollmentCount")
                        .HasColumnType("int");

                    b.Property<int?>("LocationID")
                        .HasColumnType("int");

                    b.Property<int?>("MaxParticipants")
                        .HasColumnType("int");

                    b.Property<string>("PetCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ThumbnailUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrainerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("CourseID");

                    b.ToTable("Course");

                    b.HasData(
                        new
                        {
                            CourseID = 1,
                            ApprovalStatus = "通過",
                            Clicks = 21,
                            CourseCategoryID = 1,
                            CourseName = "幼犬訓練",
                            CourseType = "一對一",
                            CreatedAt = new DateTime(2024, 5, 16, 3, 42, 22, 788, DateTimeKind.Utc).AddTicks(3549),
                            Description = "幼犬基本訓練",
                            EnrollmentCount = 0,
                            LocationID = 1,
                            MaxParticipants = 1,
                            PetCategory = "狗",
                            Price = 100m,
                            TrainerID = 1,
                            UpdatedAt = new DateTime(2024, 5, 16, 3, 42, 22, 788, DateTimeKind.Utc).AddTicks(3550)
                        },
                        new
                        {
                            CourseID = 2,
                            ApprovalStatus = "通過",
                            Clicks = 21,
                            CourseCategoryID = 1,
                            CourseName = "幼犬訓練",
                            CourseType = "一對一",
                            CreatedAt = new DateTime(2024, 5, 16, 3, 42, 22, 788, DateTimeKind.Utc).AddTicks(3552),
                            Description = "幼犬基本訓練",
                            EnrollmentCount = 0,
                            LocationID = 1,
                            MaxParticipants = 1,
                            PetCategory = "狗",
                            Price = 100m,
                            TrainerID = 1,
                            UpdatedAt = new DateTime(2024, 5, 16, 3, 42, 22, 788, DateTimeKind.Utc).AddTicks(3553)
                        },
                        new
                        {
                            CourseID = 3,
                            ApprovalStatus = "通過",
                            Clicks = 21,
                            CourseCategoryID = 1,
                            CourseName = "幼犬訓練",
                            CourseType = "一對一",
                            CreatedAt = new DateTime(2024, 5, 16, 3, 42, 22, 788, DateTimeKind.Utc).AddTicks(3555),
                            Description = "幼犬基本訓練",
                            EnrollmentCount = 0,
                            LocationID = 1,
                            MaxParticipants = 1,
                            PetCategory = "狗",
                            Price = 100m,
                            TrainerID = 1,
                            UpdatedAt = new DateTime(2024, 5, 16, 3, 42, 22, 788, DateTimeKind.Utc).AddTicks(3556)
                        },
                        new
                        {
                            CourseID = 4,
                            ApprovalStatus = "通過",
                            Clicks = 21,
                            CourseCategoryID = 1,
                            CourseName = "幼犬訓練",
                            CourseType = "一對一",
                            CreatedAt = new DateTime(2024, 5, 16, 3, 42, 22, 788, DateTimeKind.Utc).AddTicks(3558),
                            Description = "幼犬基本訓練",
                            EnrollmentCount = 0,
                            LocationID = 1,
                            MaxParticipants = 1,
                            PetCategory = "狗",
                            Price = 100m,
                            TrainerID = 1,
                            UpdatedAt = new DateTime(2024, 5, 16, 3, 42, 22, 788, DateTimeKind.Utc).AddTicks(3558)
                        },
                        new
                        {
                            CourseID = 5,
                            ApprovalStatus = "通過",
                            Clicks = 21,
                            CourseCategoryID = 1,
                            CourseName = "幼犬訓練",
                            CourseType = "一對一",
                            CreatedAt = new DateTime(2024, 5, 16, 3, 42, 22, 788, DateTimeKind.Utc).AddTicks(3560),
                            Description = "幼犬基本訓練",
                            EnrollmentCount = 0,
                            LocationID = 1,
                            MaxParticipants = 1,
                            PetCategory = "狗",
                            Price = 100m,
                            TrainerID = 1,
                            UpdatedAt = new DateTime(2024, 5, 16, 3, 42, 22, 788, DateTimeKind.Utc).AddTicks(3561)
                        });
                });

            modelBuilder.Entity("Project1.Models.CourseCategory", b =>
                {
                    b.Property<int>("CourseCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseCategoryID"));

                    b.Property<string>("CourseCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseCategoryID");

                    b.ToTable("CourseCategory");

                    b.HasData(
                        new
                        {
                            CourseCategoryID = 1,
                            CourseCategoryName = "運動"
                        },
                        new
                        {
                            CourseCategoryID = 2,
                            CourseCategoryName = "技能"
                        },
                        new
                        {
                            CourseCategoryID = 3,
                            CourseCategoryName = "陪玩"
                        });
                });

            modelBuilder.Entity("Project1.Models.CourseRating", b =>
                {
                    b.Property<int>("CourseRatingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseRatingID"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("RatingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TrainerID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("CourseRatingID");

                    b.ToTable("CourseRating");

                    b.HasData(
                        new
                        {
                            CourseRatingID = 1,
                            Comment = "好學習",
                            CourseID = 1,
                            Rating = 5,
                            RatingDate = new DateTime(2024, 5, 16, 3, 42, 22, 788, DateTimeKind.Utc).AddTicks(3584),
                            TrainerID = 1,
                            UserID = 1
                        },
                        new
                        {
                            CourseRatingID = 2,
                            Comment = "好學習",
                            CourseID = 1,
                            Rating = 4,
                            RatingDate = new DateTime(2024, 5, 16, 3, 42, 22, 788, DateTimeKind.Utc).AddTicks(3585),
                            TrainerID = 1,
                            UserID = 3
                        },
                        new
                        {
                            CourseRatingID = 3,
                            Comment = "好學習",
                            CourseID = 1,
                            Rating = 3,
                            RatingDate = new DateTime(2024, 5, 16, 3, 42, 22, 788, DateTimeKind.Utc).AddTicks(3586),
                            TrainerID = 1,
                            UserID = 2
                        },
                        new
                        {
                            CourseRatingID = 4,
                            Comment = "好學習",
                            CourseID = 2,
                            Rating = 4,
                            RatingDate = new DateTime(2024, 5, 16, 3, 42, 22, 788, DateTimeKind.Utc).AddTicks(3587),
                            TrainerID = 1,
                            UserID = 1
                        },
                        new
                        {
                            CourseRatingID = 5,
                            Comment = "好學習",
                            CourseID = 2,
                            Rating = 5,
                            RatingDate = new DateTime(2024, 5, 16, 3, 42, 22, 788, DateTimeKind.Utc).AddTicks(3588),
                            TrainerID = 1,
                            UserID = 3
                        },
                        new
                        {
                            CourseRatingID = 6,
                            Comment = "好學習",
                            CourseID = 2,
                            Rating = 5,
                            RatingDate = new DateTime(2024, 5, 16, 3, 42, 22, 788, DateTimeKind.Utc).AddTicks(3589),
                            TrainerID = 1,
                            UserID = 2
                        },
                        new
                        {
                            CourseRatingID = 7,
                            Comment = "好學習",
                            CourseID = 3,
                            Rating = 5,
                            RatingDate = new DateTime(2024, 5, 16, 3, 42, 22, 788, DateTimeKind.Utc).AddTicks(3591),
                            TrainerID = 1,
                            UserID = 1
                        },
                        new
                        {
                            CourseRatingID = 8,
                            Comment = "好學習",
                            CourseID = 3,
                            Rating = 5,
                            RatingDate = new DateTime(2024, 5, 16, 3, 42, 22, 788, DateTimeKind.Utc).AddTicks(3592),
                            TrainerID = 1,
                            UserID = 3
                        },
                        new
                        {
                            CourseRatingID = 9,
                            Comment = "好學習",
                            CourseID = 3,
                            Rating = 3,
                            RatingDate = new DateTime(2024, 5, 16, 3, 42, 22, 788, DateTimeKind.Utc).AddTicks(3593),
                            TrainerID = 1,
                            UserID = 2
                        },
                        new
                        {
                            CourseRatingID = 10,
                            Comment = "好學習",
                            CourseID = 4,
                            Rating = 3,
                            RatingDate = new DateTime(2024, 5, 16, 3, 42, 22, 788, DateTimeKind.Utc).AddTicks(3594),
                            TrainerID = 1,
                            UserID = 1
                        },
                        new
                        {
                            CourseRatingID = 11,
                            Comment = "好學習",
                            CourseID = 4,
                            Rating = 3,
                            RatingDate = new DateTime(2024, 5, 16, 3, 42, 22, 788, DateTimeKind.Utc).AddTicks(3595),
                            TrainerID = 1,
                            UserID = 3
                        },
                        new
                        {
                            CourseRatingID = 12,
                            Comment = "好學習",
                            CourseID = 4,
                            Rating = 4,
                            RatingDate = new DateTime(2024, 5, 16, 3, 42, 22, 788, DateTimeKind.Utc).AddTicks(3596),
                            TrainerID = 1,
                            UserID = 2
                        },
                        new
                        {
                            CourseRatingID = 13,
                            Comment = "好學習",
                            CourseID = 5,
                            Rating = 5,
                            RatingDate = new DateTime(2024, 5, 16, 3, 42, 22, 788, DateTimeKind.Utc).AddTicks(3598),
                            TrainerID = 1,
                            UserID = 1
                        },
                        new
                        {
                            CourseRatingID = 14,
                            Comment = "好學習",
                            CourseID = 5,
                            Rating = 5,
                            RatingDate = new DateTime(2024, 5, 16, 3, 42, 22, 788, DateTimeKind.Utc).AddTicks(3599),
                            TrainerID = 1,
                            UserID = 3
                        },
                        new
                        {
                            CourseRatingID = 15,
                            Comment = "好學習",
                            CourseID = 5,
                            Rating = 5,
                            RatingDate = new DateTime(2024, 5, 16, 3, 42, 22, 788, DateTimeKind.Utc).AddTicks(3600),
                            TrainerID = 1,
                            UserID = 2
                        });
                });

            modelBuilder.Entity("Project1.Models.Discount", b =>
                {
                    b.Property<int>("DiscountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscountID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiscountDESC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiscountName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("DiscountPercentage")
                        .HasColumnType("float");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DiscountID");

                    b.ToTable("Discount");
                });

            modelBuilder.Entity("Project1.Models.Images", b =>
                {
                    b.Property<int>("ImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageID"));

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrianerID")
                        .HasColumnType("int");

                    b.HasKey("ImageID");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Project1.Models.Location", b =>
                {
                    b.Property<int>("LocationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationID"));

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationID");

                    b.ToTable("Location");

                    b.HasData(
                        new
                        {
                            LocationID = 1,
                            LocationName = "臺北市"
                        },
                        new
                        {
                            LocationID = 2,
                            LocationName = "新北市"
                        },
                        new
                        {
                            LocationID = 3,
                            LocationName = "桃園市"
                        },
                        new
                        {
                            LocationID = 4,
                            LocationName = "臺中市"
                        },
                        new
                        {
                            LocationID = 5,
                            LocationName = "臺南市"
                        },
                        new
                        {
                            LocationID = 6,
                            LocationName = "高雄市"
                        },
                        new
                        {
                            LocationID = 7,
                            LocationName = "基隆市"
                        },
                        new
                        {
                            LocationID = 8,
                            LocationName = "新竹市"
                        },
                        new
                        {
                            LocationID = 9,
                            LocationName = "嘉義市"
                        },
                        new
                        {
                            LocationID = 10,
                            LocationName = "新竹縣"
                        },
                        new
                        {
                            LocationID = 11,
                            LocationName = "苗栗縣"
                        },
                        new
                        {
                            LocationID = 12,
                            LocationName = "彰化縣"
                        },
                        new
                        {
                            LocationID = 13,
                            LocationName = "南投縣"
                        },
                        new
                        {
                            LocationID = 14,
                            LocationName = "雲林縣"
                        },
                        new
                        {
                            LocationID = 15,
                            LocationName = "嘉義縣"
                        },
                        new
                        {
                            LocationID = 16,
                            LocationName = "屏東縣"
                        },
                        new
                        {
                            LocationID = 17,
                            LocationName = "宜蘭縣"
                        },
                        new
                        {
                            LocationID = 18,
                            LocationName = "花蓮縣"
                        },
                        new
                        {
                            LocationID = 19,
                            LocationName = "臺東縣"
                        },
                        new
                        {
                            LocationID = 20,
                            LocationName = "澎湖縣"
                        },
                        new
                        {
                            LocationID = 21,
                            LocationName = "金門縣"
                        },
                        new
                        {
                            LocationID = 22,
                            LocationName = "連江縣"
                        });
                });

            modelBuilder.Entity("Project1.Models.Member", b =>
                {
                    b.Property<int>("MemberID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberID"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdministrator")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTrainer")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResidenceArea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MemberID");

                    b.ToTable("Member");

                    b.HasData(
                        new
                        {
                            MemberID = 1,
                            Birthday = new DateTime(1990, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john@example.com",
                            IsAdministrator = false,
                            IsTrainer = false,
                            Name = "John Doe",
                            Phone = "1234567890",
                            RegistrationDate = new DateTime(2024, 5, 16, 11, 42, 22, 788, DateTimeKind.Local).AddTicks(3630),
                            ResidenceArea = "Taipei"
                        },
                        new
                        {
                            MemberID = 2,
                            Birthday = new DateTime(1985, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jane@example.com",
                            IsAdministrator = false,
                            IsTrainer = false,
                            Name = "Jane Smith",
                            Phone = "0987654321",
                            RegistrationDate = new DateTime(2024, 5, 16, 11, 42, 22, 788, DateTimeKind.Local).AddTicks(3632),
                            ResidenceArea = "New York"
                        },
                        new
                        {
                            MemberID = 3,
                            Birthday = new DateTime(1988, 10, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "emily@example.com",
                            IsAdministrator = false,
                            IsTrainer = false,
                            Name = "Emily Johnson",
                            Phone = "1357924680",
                            RegistrationDate = new DateTime(2024, 5, 16, 11, 42, 22, 788, DateTimeKind.Local).AddTicks(3635),
                            ResidenceArea = "Los Angeles"
                        },
                        new
                        {
                            MemberID = 4,
                            Birthday = new DateTime(1975, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "michael@example.com",
                            IsAdministrator = false,
                            IsTrainer = true,
                            Name = "Michael Brown",
                            Phone = "1122334455",
                            RegistrationDate = new DateTime(2024, 5, 16, 11, 42, 22, 788, DateTimeKind.Local).AddTicks(3637),
                            ResidenceArea = "London"
                        },
                        new
                        {
                            MemberID = 5,
                            Birthday = new DateTime(1995, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sophia@example.com",
                            IsAdministrator = true,
                            IsTrainer = false,
                            Name = "Sophia Wilson",
                            Phone = "9988776655",
                            RegistrationDate = new DateTime(2024, 5, 16, 11, 42, 22, 788, DateTimeKind.Local).AddTicks(3638),
                            ResidenceArea = "Paris"
                        });
                });

            modelBuilder.Entity("Project1.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DiscountID")
                        .HasColumnType("int");

                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderID");

                    b.ToTable("Order");

                    b.HasData(
                        new
                        {
                            OrderID = 1,
                            CreatedAt = new DateTime(2024, 5, 16, 11, 42, 22, 788, DateTimeKind.Local).AddTicks(3370),
                            MemberID = 1,
                            OrderDate = new DateTime(2024, 5, 16, 11, 42, 22, 788, DateTimeKind.Local).AddTicks(3360),
                            OrderStatus = "Processing",
                            TotalAmount = 100m
                        },
                        new
                        {
                            OrderID = 2,
                            CreatedAt = new DateTime(2024, 5, 16, 11, 42, 22, 788, DateTimeKind.Local).AddTicks(3372),
                            MemberID = 2,
                            OrderDate = new DateTime(2024, 5, 16, 11, 42, 22, 788, DateTimeKind.Local).AddTicks(3371),
                            OrderStatus = "Delivered",
                            TotalAmount = 200m
                        },
                        new
                        {
                            OrderID = 3,
                            CreatedAt = new DateTime(2024, 5, 16, 11, 42, 22, 788, DateTimeKind.Local).AddTicks(3374),
                            MemberID = 3,
                            OrderDate = new DateTime(2024, 5, 16, 11, 42, 22, 788, DateTimeKind.Local).AddTicks(3373),
                            OrderStatus = "Cancelled",
                            TotalAmount = 300m
                        },
                        new
                        {
                            OrderID = 4,
                            CreatedAt = new DateTime(2024, 5, 16, 11, 42, 22, 788, DateTimeKind.Local).AddTicks(3376),
                            MemberID = 4,
                            OrderDate = new DateTime(2024, 5, 16, 11, 42, 22, 788, DateTimeKind.Local).AddTicks(3375),
                            OrderStatus = "Processing",
                            TotalAmount = 800m
                        },
                        new
                        {
                            OrderID = 5,
                            CreatedAt = new DateTime(2024, 5, 16, 11, 42, 22, 788, DateTimeKind.Local).AddTicks(3378),
                            MemberID = 5,
                            OrderDate = new DateTime(2024, 5, 16, 11, 42, 22, 788, DateTimeKind.Local).AddTicks(3377),
                            OrderStatus = "Shipped",
                            TotalAmount = 1000m
                        });
                });

            modelBuilder.Entity("Project1.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailID"));

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderDetailID");

                    b.ToTable("OrderDetail");

                    b.HasData(
                        new
                        {
                            OrderDetailID = 1,
                            CourseID = 1,
                            CreatedAt = new DateTime(2024, 5, 16, 3, 42, 22, 788, DateTimeKind.Utc).AddTicks(3507),
                            OrderID = 1,
                            Quantity = 2,
                            UnitPrice = 100m
                        },
                        new
                        {
                            OrderDetailID = 2,
                            CourseID = 2,
                            CreatedAt = new DateTime(2024, 5, 16, 3, 42, 22, 788, DateTimeKind.Utc).AddTicks(3508),
                            OrderID = 1,
                            Quantity = 4,
                            UnitPrice = 100m
                        },
                        new
                        {
                            OrderDetailID = 3,
                            CourseID = 3,
                            CreatedAt = new DateTime(2024, 5, 16, 3, 42, 22, 788, DateTimeKind.Utc).AddTicks(3510),
                            OrderID = 1,
                            Quantity = 3,
                            UnitPrice = 100m
                        },
                        new
                        {
                            OrderDetailID = 4,
                            CourseID = 4,
                            CreatedAt = new DateTime(2024, 5, 16, 3, 42, 22, 788, DateTimeKind.Utc).AddTicks(3511),
                            OrderID = 2,
                            Quantity = 3,
                            UnitPrice = 100m
                        },
                        new
                        {
                            OrderDetailID = 5,
                            CourseID = 5,
                            CreatedAt = new DateTime(2024, 5, 16, 3, 42, 22, 788, DateTimeKind.Utc).AddTicks(3513),
                            OrderID = 2,
                            Quantity = 3,
                            UnitPrice = 100m
                        },
                        new
                        {
                            OrderDetailID = 6,
                            CourseID = 3,
                            CreatedAt = new DateTime(2024, 5, 16, 3, 42, 22, 788, DateTimeKind.Utc).AddTicks(3514),
                            OrderID = 2,
                            Quantity = 2,
                            UnitPrice = 100m
                        },
                        new
                        {
                            OrderDetailID = 7,
                            CourseID = 3,
                            CreatedAt = new DateTime(2024, 5, 16, 3, 42, 22, 788, DateTimeKind.Utc).AddTicks(3515),
                            OrderID = 3,
                            Quantity = 5,
                            UnitPrice = 100m
                        },
                        new
                        {
                            OrderDetailID = 8,
                            CourseID = 4,
                            CreatedAt = new DateTime(2024, 5, 16, 3, 42, 22, 788, DateTimeKind.Utc).AddTicks(3517),
                            OrderID = 3,
                            Quantity = 7,
                            UnitPrice = 100m
                        },
                        new
                        {
                            OrderDetailID = 9,
                            CourseID = 2,
                            CreatedAt = new DateTime(2024, 5, 16, 3, 42, 22, 788, DateTimeKind.Utc).AddTicks(3518),
                            OrderID = 4,
                            Quantity = 6,
                            UnitPrice = 100m
                        },
                        new
                        {
                            OrderDetailID = 10,
                            CourseID = 3,
                            CreatedAt = new DateTime(2024, 5, 16, 3, 42, 22, 788, DateTimeKind.Utc).AddTicks(3519),
                            OrderID = 4,
                            Quantity = 8,
                            UnitPrice = 100m
                        },
                        new
                        {
                            OrderDetailID = 11,
                            CourseID = 3,
                            CreatedAt = new DateTime(2024, 5, 16, 3, 42, 22, 788, DateTimeKind.Utc).AddTicks(3521),
                            OrderID = 4,
                            Quantity = 8,
                            UnitPrice = 100m
                        });
                });

            modelBuilder.Entity("Project1.Models.Payment", b =>
                {
                    b.Property<int>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentID"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentID");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("Project1.Models.Pet", b =>
                {
                    b.Property<int>("PetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PetID"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.Property<string>("PetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PetType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("PetID");

                    b.ToTable("Pet");
                });

            modelBuilder.Entity("Project1.Models.Trainer", b =>
                {
                    b.Property<int>("TrainerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrainerID"));

                    b.Property<string>("Experience")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qualifications")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrainerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TrainerID");

                    b.ToTable("Trainer");

                    b.HasData(
                        new
                        {
                            TrainerID = 1,
                            Experience = "10年舉重訓練經驗",
                            MemberID = 4,
                            Qualifications = "認證個人教練",
                            Specialization = "舉重",
                            Status = "已審核",
                            TrainerName = "張三"
                        },
                        new
                        {
                            TrainerID = 2,
                            Experience = "8年瑜伽教學經驗",
                            MemberID = 7,
                            Qualifications = "註冊瑜伽導師",
                            Specialization = "瑜伽",
                            Status = "已審核",
                            TrainerName = "李四"
                        },
                        new
                        {
                            TrainerID = 3,
                            Experience = "15年游泳教學經驗",
                            MemberID = 2,
                            Qualifications = "國家游泳教練證書",
                            Specialization = "游泳",
                            Status = "已審核",
                            TrainerName = "王五"
                        },
                        new
                        {
                            TrainerID = 4,
                            Experience = "12年有氧運動指導經驗",
                            MemberID = 5,
                            Qualifications = "健身教練證書",
                            Specialization = "有氧運動",
                            Status = "已審核",
                            TrainerName = "劉六"
                        },
                        new
                        {
                            TrainerID = 5,
                            Experience = "20年網球教學經驗",
                            MemberID = 8,
                            Qualifications = "國際網球協會認證",
                            Specialization = "網球",
                            Status = "已審核",
                            TrainerName = "陳七"
                        },
                        new
                        {
                            TrainerID = 6,
                            Experience = "專業拳擊手",
                            MemberID = 9,
                            Qualifications = "拳擊教練證書",
                            Specialization = "拳擊",
                            Status = "已審核",
                            TrainerName = "林八"
                        },
                        new
                        {
                            TrainerID = 7,
                            Experience = "多年武術修煉經驗",
                            MemberID = 10,
                            Qualifications = "武術大師",
                            Specialization = "武術",
                            Status = "已審核",
                            TrainerName = "黃九"
                        },
                        new
                        {
                            TrainerID = 8,
                            Experience = "5年瑜伽教學經驗",
                            MemberID = 3,
                            Qualifications = "瑜伽教練執照",
                            Specialization = "瑜伽",
                            Status = "已審核",
                            TrainerName = "蔡十"
                        },
                        new
                        {
                            TrainerID = 9,
                            Experience = "馬拉松選手",
                            MemberID = 6,
                            Qualifications = "專業跑者",
                            Specialization = "慢跑",
                            Status = "已審核",
                            TrainerName = "許十一"
                        },
                        new
                        {
                            TrainerID = 10,
                            Experience = "校隊隊長",
                            MemberID = 1,
                            Qualifications = "籃球教練執照",
                            Specialization = "籃球",
                            Status = "已審核",
                            TrainerName = "余十二"
                        });
                });

            modelBuilder.Entity("Project1.Models.TrainerServiceArea", b =>
                {
                    b.Property<int>("TeachingAreaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeachingAreaID"));

                    b.Property<int>("LocationID")
                        .HasColumnType("int");

                    b.Property<int>("TrainerID")
                        .HasColumnType("int");

                    b.HasKey("TeachingAreaID");

                    b.ToTable("TrainerServiceArea");
                });
#pragma warning restore 612, 618
        }
    }
}
