// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project1.Data;

#nullable disable

namespace Project1.Migrations
{
    [DbContext(typeof(ProjectDbContext))]
    [Migration("20240514081807_update data10")]
    partial class updatedata10
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Project1.Models.Blog", b =>
                {
                    b.Property<int>("BlogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlogID"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PostedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TrainerID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BlogID");

                    b.ToTable("Blog");
                });

            modelBuilder.Entity("Project1.Models.ClassSchedule", b =>
                {
                    b.Property<int>("SchedulerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SchedulerID"));

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Scheduler")
                        .HasColumnType("datetime2");

                    b.HasKey("SchedulerID");

                    b.ToTable("ClassSchedule");
                });

            modelBuilder.Entity("Project1.Models.Course", b =>
                {
                    b.Property<int>("CourseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseID"));

                    b.Property<string>("ApprovalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Clicks")
                        .HasColumnType("int");

                    b.Property<int>("CourseCategoryID")
                        .HasColumnType("int");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CourseTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EnrollmentCount")
                        .HasColumnType("int");

                    b.Property<int?>("LocationID")
                        .HasColumnType("int");

                    b.Property<int?>("MaxParticipants")
                        .HasColumnType("int");

                    b.Property<int>("PetCategoryID")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ThumbnailUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrainerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("CourseID");

                    b.ToTable("Course");

                    b.HasData(
                        new
                        {
                            CourseID = 1,
                            ApprovalStatus = "通過",
                            Clicks = 21,
                            CourseCategoryID = 1,
                            CourseName = "幼犬初級訓練",
                            CourseTypeID = 1,
                            CreatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1186),
                            Description = "教您如何教導您的狗基本指令和技巧，如坐下、待命和走路等。",
                            EnrollmentCount = 0,
                            LocationID = 1,
                            MaxParticipants = 1,
                            PetCategoryID = 1,
                            Price = 100m,
                            ThumbnailUrl = "/Img/CourseThumbnail/course1.jpg",
                            TrainerID = 1,
                            UpdatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1186)
                        },
                        new
                        {
                            CourseID = 2,
                            ApprovalStatus = "通過",
                            Clicks = 17,
                            CourseCategoryID = 2,
                            CourseName = "貓咪玩耍技巧",
                            CourseTypeID = 1,
                            CreatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1189),
                            Description = "教您如何培養貓咪的遊戲技巧和互動能力，以及運動與娛樂訓練。",
                            EnrollmentCount = 0,
                            LocationID = 2,
                            MaxParticipants = 1,
                            PetCategoryID = 2,
                            Price = 120m,
                            ThumbnailUrl = "/Img/CourseThumbnail/course3.jpg",
                            TrainerID = 2,
                            UpdatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1189)
                        },
                        new
                        {
                            CourseID = 3,
                            ApprovalStatus = "通過",
                            Clicks = 25,
                            CourseCategoryID = 2,
                            CourseName = "狗狗攝食指導",
                            CourseTypeID = 2,
                            CreatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1192),
                            Description = "教您如何給予狗狗均衡的飲食和營養，以維持健康和活力。",
                            EnrollmentCount = 0,
                            LocationID = 3,
                            MaxParticipants = 2,
                            PetCategoryID = 1,
                            Price = 90m,
                            ThumbnailUrl = "/Img/CourseThumbnail/course4.jpg",
                            TrainerID = 3,
                            UpdatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1192)
                        },
                        new
                        {
                            CourseID = 4,
                            ApprovalStatus = "通過",
                            Clicks = 14,
                            CourseCategoryID = 2,
                            CourseName = "狗狗社交訓練",
                            CourseTypeID = 2,
                            CreatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1194),
                            Description = "幫助您的狗與其他狗和人建立友好的關係，減少焦慮和攻擊行為。",
                            EnrollmentCount = 0,
                            LocationID = 4,
                            MaxParticipants = 3,
                            PetCategoryID = 1,
                            Price = 80m,
                            ThumbnailUrl = "/Img/CourseThumbnail/course5.jpg",
                            TrainerID = 4,
                            UpdatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1194)
                        },
                        new
                        {
                            CourseID = 5,
                            ApprovalStatus = "通過",
                            Clicks = 19,
                            CourseCategoryID = 1,
                            CourseName = "貓咪基礎訓練",
                            CourseTypeID = 2,
                            CreatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1196),
                            Description = "學習如何訓練您的貓咪做到基本的動作，例如使用貓砂盆和對聲音指令的回應。",
                            EnrollmentCount = 0,
                            LocationID = 5,
                            MaxParticipants = 2,
                            PetCategoryID = 2,
                            Price = 110m,
                            ThumbnailUrl = "/Img/CourseThumbnail/course6.jpg",
                            TrainerID = 5,
                            UpdatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1196)
                        },
                        new
                        {
                            CourseID = 6,
                            ApprovalStatus = "通過",
                            Clicks = 12,
                            CourseCategoryID = 1,
                            CourseName = "狗狗運動訓練",
                            CourseTypeID = 2,
                            CreatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1198),
                            Description = "訓練狗狗進行各種運動，如擲球、跑步和障礙訓練，以增強體力和耐力。",
                            EnrollmentCount = 0,
                            LocationID = 6,
                            MaxParticipants = 5,
                            PetCategoryID = 1,
                            Price = 70m,
                            ThumbnailUrl = "/Img/CourseThumbnail/course1.jpg",
                            TrainerID = 6,
                            UpdatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1199)
                        },
                        new
                        {
                            CourseID = 7,
                            ApprovalStatus = "通過",
                            Clicks = 23,
                            CourseCategoryID = 2,
                            CourseName = "貓咪心理療法",
                            CourseTypeID = 2,
                            CreatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1201),
                            Description = "介紹貓咪的心理狀態和行為問題，並提供治療和紓解方法。",
                            EnrollmentCount = 0,
                            LocationID = 7,
                            MaxParticipants = 3,
                            PetCategoryID = 2,
                            Price = 100m,
                            ThumbnailUrl = "/Img/CourseThumbnail/course2.jpg",
                            TrainerID = 7,
                            UpdatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1201)
                        },
                        new
                        {
                            CourseID = 8,
                            ApprovalStatus = "通過",
                            Clicks = 18,
                            CourseCategoryID = 2,
                            CourseName = "狗狗護理實務",
                            CourseTypeID = 2,
                            CreatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1203),
                            Description = "學習如何給予狗狗良好的護理，包括洗澡、梳毛、剪指甲等日常護理技巧。",
                            EnrollmentCount = 0,
                            LocationID = 8,
                            MaxParticipants = 2,
                            PetCategoryID = 1,
                            Price = 130m,
                            ThumbnailUrl = "/Img/CourseThumbnail/course3.jpg",
                            TrainerID = 8,
                            UpdatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1203)
                        },
                        new
                        {
                            CourseID = 9,
                            ApprovalStatus = "通過",
                            Clicks = 20,
                            CourseCategoryID = 2,
                            CourseName = "貓咪飲食指導",
                            CourseTypeID = 2,
                            CreatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1207),
                            Description = "指導您如何挑選合適的貓咪食品，以及如何處理貓咪的特殊飲食需求。",
                            EnrollmentCount = 0,
                            LocationID = 9,
                            MaxParticipants = 6,
                            PetCategoryID = 2,
                            Price = 95m,
                            ThumbnailUrl = "/Img/CourseThumbnail/course4.jpg",
                            TrainerID = 9,
                            UpdatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1207)
                        },
                        new
                        {
                            CourseID = 10,
                            ApprovalStatus = "通過",
                            Clicks = 16,
                            CourseCategoryID = 2,
                            CourseName = "狗狗心理訓練",
                            CourseTypeID = 2,
                            CreatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1209),
                            Description = "透過心理學原理，幫助您了解和解決狗狗的行為問題，提高狗狗的心理健康。",
                            EnrollmentCount = 0,
                            LocationID = 15,
                            MaxParticipants = 6,
                            PetCategoryID = 1,
                            Price = 85m,
                            ThumbnailUrl = "/Img/CourseThumbnail/course1.jpg",
                            TrainerID = 10,
                            UpdatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1209)
                        },
                        new
                        {
                            CourseID = 11,
                            ApprovalStatus = "通過",
                            Clicks = 16,
                            CourseCategoryID = 2,
                            CourseName = "貓咪攝食指南",
                            CourseTypeID = 1,
                            CreatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1211),
                            Description = "提供關於貓咪飲食、營養和餵食方式的專業指導和建議。",
                            EnrollmentCount = 0,
                            LocationID = 10,
                            MaxParticipants = 1,
                            PetCategoryID = 2,
                            Price = 85m,
                            ThumbnailUrl = "/Img/CourseThumbnail/course4.jpg",
                            TrainerID = 1,
                            UpdatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1212)
                        },
                        new
                        {
                            CourseID = 12,
                            ApprovalStatus = "通過",
                            Clicks = 22,
                            CourseCategoryID = 2,
                            CourseName = "狗狗訓練工具應用",
                            CourseTypeID = 2,
                            CreatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1214),
                            Description = "介紹和示範各種訓練工具的使用方法，如點擊器、項圈和玩具。",
                            EnrollmentCount = 0,
                            LocationID = 11,
                            MaxParticipants = 2,
                            PetCategoryID = 1,
                            Price = 75m,
                            ThumbnailUrl = "/Img/CourseThumbnail/course2.jpg",
                            TrainerID = 2,
                            UpdatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1214)
                        },
                        new
                        {
                            CourseID = 13,
                            ApprovalStatus = "通過",
                            Clicks = 23,
                            CourseCategoryID = 2,
                            CourseName = "貓咪健康檢查",
                            CourseTypeID = 2,
                            CreatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1238),
                            Description = "教您如何給貓咪進行基本的健康檢查，包括檢查牙齒、耳朵和毛皮。",
                            EnrollmentCount = 0,
                            LocationID = 12,
                            MaxParticipants = 3,
                            PetCategoryID = 2,
                            Price = 80m,
                            ThumbnailUrl = "/Img/CourseThumbnail/course5.jpg",
                            TrainerID = 3,
                            UpdatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1238)
                        },
                        new
                        {
                            CourseID = 14,
                            ApprovalStatus = "通過",
                            Clicks = 19,
                            CourseCategoryID = 2,
                            CourseName = "狗狗行為矯正",
                            CourseTypeID = 1,
                            CreatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1241),
                            Description = "幫助您了解狗狗的不良行為根源，並提供有效的矯正和改善方法。",
                            EnrollmentCount = 0,
                            LocationID = 13,
                            MaxParticipants = 1,
                            PetCategoryID = 1,
                            Price = 90m,
                            ThumbnailUrl = "/Img/CourseThumbnail/course3.jpg",
                            TrainerID = 4,
                            UpdatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1241)
                        },
                        new
                        {
                            CourseID = 15,
                            ApprovalStatus = "通過",
                            Clicks = 20,
                            CourseCategoryID = 2,
                            CourseName = "貓咪社交化培訓",
                            CourseTypeID = 2,
                            CreatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1243),
                            Description = "教您如何幫助貓咪建立社交技巧，與其他貓咪和人類和睦相處。",
                            EnrollmentCount = 0,
                            LocationID = 14,
                            MaxParticipants = 5,
                            PetCategoryID = 2,
                            Price = 100m,
                            ThumbnailUrl = "/Img/CourseThumbnail/course1.jpg",
                            TrainerID = 5,
                            UpdatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1243)
                        });
                });

            modelBuilder.Entity("Project1.Models.CourseCategory", b =>
                {
                    b.Property<int>("CourseCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseCategoryID"));

                    b.Property<string>("CourseCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseCategoryID");

                    b.ToTable("CourseCategory");

                    b.HasData(
                        new
                        {
                            CourseCategoryID = 1,
                            CourseCategoryName = "運動"
                        },
                        new
                        {
                            CourseCategoryID = 2,
                            CourseCategoryName = "技能"
                        },
                        new
                        {
                            CourseCategoryID = 3,
                            CourseCategoryName = "陪玩"
                        });
                });

            modelBuilder.Entity("Project1.Models.CourseRating", b =>
                {
                    b.Property<int>("CourseRatingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseRatingID"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("RatingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TrainerID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("CourseRatingID");

                    b.ToTable("CourseRating");

                    b.HasData(
                        new
                        {
                            CourseRatingID = 1,
                            Comment = "好學習",
                            CourseID = 1,
                            Rating = 5,
                            RatingDate = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1265),
                            TrainerID = 1,
                            UserID = 1
                        },
                        new
                        {
                            CourseRatingID = 2,
                            Comment = "好學習",
                            CourseID = 1,
                            Rating = 4,
                            RatingDate = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1267),
                            TrainerID = 1,
                            UserID = 3
                        },
                        new
                        {
                            CourseRatingID = 3,
                            Comment = "好學習",
                            CourseID = 1,
                            Rating = 3,
                            RatingDate = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1268),
                            TrainerID = 1,
                            UserID = 2
                        },
                        new
                        {
                            CourseRatingID = 4,
                            Comment = "好學習",
                            CourseID = 2,
                            Rating = 4,
                            RatingDate = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1269),
                            TrainerID = 1,
                            UserID = 1
                        },
                        new
                        {
                            CourseRatingID = 5,
                            Comment = "好學習",
                            CourseID = 2,
                            Rating = 5,
                            RatingDate = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1270),
                            TrainerID = 1,
                            UserID = 3
                        },
                        new
                        {
                            CourseRatingID = 6,
                            Comment = "好學習",
                            CourseID = 2,
                            Rating = 5,
                            RatingDate = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1271),
                            TrainerID = 1,
                            UserID = 2
                        },
                        new
                        {
                            CourseRatingID = 7,
                            Comment = "好學習",
                            CourseID = 3,
                            Rating = 5,
                            RatingDate = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1272),
                            TrainerID = 1,
                            UserID = 1
                        },
                        new
                        {
                            CourseRatingID = 8,
                            Comment = "好學習",
                            CourseID = 3,
                            Rating = 5,
                            RatingDate = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1273),
                            TrainerID = 1,
                            UserID = 3
                        },
                        new
                        {
                            CourseRatingID = 9,
                            Comment = "好學習",
                            CourseID = 3,
                            Rating = 3,
                            RatingDate = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1274),
                            TrainerID = 1,
                            UserID = 2
                        },
                        new
                        {
                            CourseRatingID = 10,
                            Comment = "好學習",
                            CourseID = 4,
                            Rating = 3,
                            RatingDate = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1275),
                            TrainerID = 1,
                            UserID = 1
                        },
                        new
                        {
                            CourseRatingID = 11,
                            Comment = "好學習",
                            CourseID = 4,
                            Rating = 3,
                            RatingDate = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1276),
                            TrainerID = 1,
                            UserID = 3
                        },
                        new
                        {
                            CourseRatingID = 12,
                            Comment = "好學習",
                            CourseID = 4,
                            Rating = 4,
                            RatingDate = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1277),
                            TrainerID = 1,
                            UserID = 2
                        },
                        new
                        {
                            CourseRatingID = 13,
                            Comment = "好學習",
                            CourseID = 5,
                            Rating = 5,
                            RatingDate = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1278),
                            TrainerID = 1,
                            UserID = 1
                        },
                        new
                        {
                            CourseRatingID = 14,
                            Comment = "好學習",
                            CourseID = 5,
                            Rating = 5,
                            RatingDate = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1279),
                            TrainerID = 1,
                            UserID = 3
                        },
                        new
                        {
                            CourseRatingID = 15,
                            Comment = "好學習",
                            CourseID = 5,
                            Rating = 5,
                            RatingDate = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1280),
                            TrainerID = 1,
                            UserID = 2
                        });
                });

            modelBuilder.Entity("Project1.Models.CourseType", b =>
                {
                    b.Property<int>("CourseTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseTypeID"));

                    b.Property<string>("CourseTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseTypeID");

                    b.ToTable("CourseType");

                    b.HasData(
                        new
                        {
                            CourseTypeID = 1,
                            CourseTypeName = "一對一"
                        },
                        new
                        {
                            CourseTypeID = 2,
                            CourseTypeName = "團課"
                        });
                });

            modelBuilder.Entity("Project1.Models.Discount", b =>
                {
                    b.Property<int>("DiscountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscountID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiscountDESC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiscountName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("DiscountPercentage")
                        .HasColumnType("float");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DiscountID");

                    b.ToTable("Discount");
                });

            modelBuilder.Entity("Project1.Models.Images", b =>
                {
                    b.Property<int>("ImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageID"));

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrianerID")
                        .HasColumnType("int");

                    b.HasKey("ImageID");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Project1.Models.Location", b =>
                {
                    b.Property<int>("LocationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationID"));

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationID");

                    b.ToTable("Location");

                    b.HasData(
                        new
                        {
                            LocationID = 1,
                            LocationName = "臺北市"
                        },
                        new
                        {
                            LocationID = 2,
                            LocationName = "新北市"
                        },
                        new
                        {
                            LocationID = 3,
                            LocationName = "桃園市"
                        },
                        new
                        {
                            LocationID = 4,
                            LocationName = "臺中市"
                        },
                        new
                        {
                            LocationID = 5,
                            LocationName = "臺南市"
                        },
                        new
                        {
                            LocationID = 6,
                            LocationName = "高雄市"
                        },
                        new
                        {
                            LocationID = 7,
                            LocationName = "基隆市"
                        },
                        new
                        {
                            LocationID = 8,
                            LocationName = "新竹市"
                        },
                        new
                        {
                            LocationID = 9,
                            LocationName = "嘉義市"
                        },
                        new
                        {
                            LocationID = 10,
                            LocationName = "新竹縣"
                        },
                        new
                        {
                            LocationID = 11,
                            LocationName = "苗栗縣"
                        },
                        new
                        {
                            LocationID = 12,
                            LocationName = "彰化縣"
                        },
                        new
                        {
                            LocationID = 13,
                            LocationName = "南投縣"
                        },
                        new
                        {
                            LocationID = 14,
                            LocationName = "雲林縣"
                        },
                        new
                        {
                            LocationID = 15,
                            LocationName = "嘉義縣"
                        },
                        new
                        {
                            LocationID = 16,
                            LocationName = "屏東縣"
                        },
                        new
                        {
                            LocationID = 17,
                            LocationName = "宜蘭縣"
                        },
                        new
                        {
                            LocationID = 18,
                            LocationName = "花蓮縣"
                        },
                        new
                        {
                            LocationID = 19,
                            LocationName = "臺東縣"
                        },
                        new
                        {
                            LocationID = 20,
                            LocationName = "澎湖縣"
                        },
                        new
                        {
                            LocationID = 21,
                            LocationName = "金門縣"
                        },
                        new
                        {
                            LocationID = 22,
                            LocationName = "連江縣"
                        });
                });

            modelBuilder.Entity("Project1.Models.Member", b =>
                {
                    b.Property<int>("MemberID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberID"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdministrator")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTrainer")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResidenceArea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MemberID");

                    b.ToTable("Member");

                    b.HasData(
                        new
                        {
                            MemberID = 1,
                            Birthday = new DateTime(1995, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "wang@example.com",
                            IsAdministrator = false,
                            IsTrainer = false,
                            Name = "林宜萱",
                            Phone = "0987654321",
                            RegistrationDate = new DateTime(2024, 5, 14, 16, 18, 6, 974, DateTimeKind.Local).AddTicks(1302),
                            ResidenceArea = "台北市"
                        },
                        new
                        {
                            MemberID = 2,
                            Birthday = new DateTime(1988, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lin@example.com",
                            IsAdministrator = false,
                            IsTrainer = false,
                            Name = "吳偉昌",
                            Phone = "0912345678",
                            RegistrationDate = new DateTime(2024, 5, 14, 16, 18, 6, 974, DateTimeKind.Local).AddTicks(1305),
                            ResidenceArea = "新北市"
                        },
                        new
                        {
                            MemberID = 3,
                            Birthday = new DateTime(1992, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "zhang@example.com",
                            IsAdministrator = false,
                            IsTrainer = false,
                            Name = "黃文彥",
                            Phone = "0922334455",
                            RegistrationDate = new DateTime(2024, 5, 14, 16, 18, 6, 974, DateTimeKind.Local).AddTicks(1307),
                            ResidenceArea = "台中市"
                        },
                        new
                        {
                            MemberID = 4,
                            Birthday = new DateTime(1997, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "chen@example.com",
                            IsAdministrator = false,
                            IsTrainer = false,
                            Name = "張明志",
                            Phone = "0955667788",
                            RegistrationDate = new DateTime(2024, 5, 14, 16, 18, 6, 974, DateTimeKind.Local).AddTicks(1309),
                            ResidenceArea = "高雄市"
                        },
                        new
                        {
                            MemberID = 5,
                            Birthday = new DateTime(1985, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "li@example.com",
                            IsAdministrator = false,
                            IsTrainer = false,
                            Name = "許淑惠",
                            Phone = "0933123456",
                            RegistrationDate = new DateTime(2024, 5, 14, 16, 18, 6, 974, DateTimeKind.Local).AddTicks(1310),
                            ResidenceArea = "桃園市"
                        },
                        new
                        {
                            MemberID = 6,
                            Birthday = new DateTime(1980, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "wu@example.com",
                            IsAdministrator = false,
                            IsTrainer = false,
                            Name = "李志明",
                            Phone = "0977889900",
                            RegistrationDate = new DateTime(2024, 5, 14, 16, 18, 6, 974, DateTimeKind.Local).AddTicks(1311),
                            ResidenceArea = "台南市"
                        },
                        new
                        {
                            MemberID = 7,
                            Birthday = new DateTime(1990, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "xu@example.com",
                            IsAdministrator = false,
                            IsTrainer = false,
                            Name = "徐宜真",
                            Phone = "0911223344",
                            RegistrationDate = new DateTime(2024, 5, 14, 16, 18, 6, 974, DateTimeKind.Local).AddTicks(1313),
                            ResidenceArea = "基隆市"
                        },
                        new
                        {
                            MemberID = 8,
                            Birthday = new DateTime(1983, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "cai@example.com",
                            IsAdministrator = false,
                            IsTrainer = false,
                            Name = "蔡文偉",
                            Phone = "0988777666",
                            RegistrationDate = new DateTime(2024, 5, 14, 16, 18, 6, 974, DateTimeKind.Local).AddTicks(1314),
                            ResidenceArea = "新竹市"
                        },
                        new
                        {
                            MemberID = 9,
                            Birthday = new DateTime(1993, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "qiu@example.com",
                            IsAdministrator = false,
                            IsTrainer = false,
                            Name = "楊宜真",
                            Phone = "0966888999",
                            RegistrationDate = new DateTime(2024, 5, 14, 16, 18, 6, 974, DateTimeKind.Local).AddTicks(1315),
                            ResidenceArea = "嘉義市"
                        },
                        new
                        {
                            MemberID = 10,
                            Birthday = new DateTime(1998, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ye@example.com",
                            IsAdministrator = false,
                            IsTrainer = false,
                            Name = "陳志宏",
                            Phone = "0944556677",
                            RegistrationDate = new DateTime(2024, 5, 14, 16, 18, 6, 974, DateTimeKind.Local).AddTicks(1317),
                            ResidenceArea = "新北市"
                        });
                });

            modelBuilder.Entity("Project1.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DiscountID")
                        .HasColumnType("int");

                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderID");

                    b.ToTable("Order");

                    b.HasData(
                        new
                        {
                            OrderID = 1,
                            CreatedAt = new DateTime(2024, 5, 14, 16, 18, 6, 974, DateTimeKind.Local).AddTicks(1123),
                            MemberID = 1,
                            OrderDate = new DateTime(2024, 5, 14, 16, 18, 6, 974, DateTimeKind.Local).AddTicks(1112),
                            OrderStatus = "Processing",
                            TotalAmount = 100m
                        },
                        new
                        {
                            OrderID = 2,
                            CreatedAt = new DateTime(2024, 5, 14, 16, 18, 6, 974, DateTimeKind.Local).AddTicks(1125),
                            MemberID = 2,
                            OrderDate = new DateTime(2024, 5, 14, 16, 18, 6, 974, DateTimeKind.Local).AddTicks(1124),
                            OrderStatus = "Delivered",
                            TotalAmount = 200m
                        },
                        new
                        {
                            OrderID = 3,
                            CreatedAt = new DateTime(2024, 5, 14, 16, 18, 6, 974, DateTimeKind.Local).AddTicks(1126),
                            MemberID = 3,
                            OrderDate = new DateTime(2024, 5, 14, 16, 18, 6, 974, DateTimeKind.Local).AddTicks(1126),
                            OrderStatus = "Cancelled",
                            TotalAmount = 300m
                        },
                        new
                        {
                            OrderID = 4,
                            CreatedAt = new DateTime(2024, 5, 14, 16, 18, 6, 974, DateTimeKind.Local).AddTicks(1128),
                            MemberID = 4,
                            OrderDate = new DateTime(2024, 5, 14, 16, 18, 6, 974, DateTimeKind.Local).AddTicks(1127),
                            OrderStatus = "Processing",
                            TotalAmount = 800m
                        },
                        new
                        {
                            OrderID = 5,
                            CreatedAt = new DateTime(2024, 5, 14, 16, 18, 6, 974, DateTimeKind.Local).AddTicks(1129),
                            MemberID = 5,
                            OrderDate = new DateTime(2024, 5, 14, 16, 18, 6, 974, DateTimeKind.Local).AddTicks(1129),
                            OrderStatus = "Shipped",
                            TotalAmount = 1000m
                        });
                });

            modelBuilder.Entity("Project1.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailID"));

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderDetailID");

                    b.ToTable("OrderDetail");

                    b.HasData(
                        new
                        {
                            OrderDetailID = 1,
                            CourseID = 1,
                            CreatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1152),
                            OrderID = 1,
                            Quantity = 2,
                            UnitPrice = 100m
                        },
                        new
                        {
                            OrderDetailID = 2,
                            CourseID = 2,
                            CreatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1154),
                            OrderID = 1,
                            Quantity = 4,
                            UnitPrice = 100m
                        },
                        new
                        {
                            OrderDetailID = 3,
                            CourseID = 3,
                            CreatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1155),
                            OrderID = 1,
                            Quantity = 3,
                            UnitPrice = 100m
                        },
                        new
                        {
                            OrderDetailID = 4,
                            CourseID = 4,
                            CreatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1157),
                            OrderID = 2,
                            Quantity = 3,
                            UnitPrice = 100m
                        },
                        new
                        {
                            OrderDetailID = 5,
                            CourseID = 5,
                            CreatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1158),
                            OrderID = 2,
                            Quantity = 3,
                            UnitPrice = 100m
                        },
                        new
                        {
                            OrderDetailID = 6,
                            CourseID = 3,
                            CreatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1159),
                            OrderID = 2,
                            Quantity = 2,
                            UnitPrice = 100m
                        },
                        new
                        {
                            OrderDetailID = 7,
                            CourseID = 3,
                            CreatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1160),
                            OrderID = 3,
                            Quantity = 5,
                            UnitPrice = 100m
                        },
                        new
                        {
                            OrderDetailID = 8,
                            CourseID = 4,
                            CreatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1161),
                            OrderID = 3,
                            Quantity = 7,
                            UnitPrice = 100m
                        },
                        new
                        {
                            OrderDetailID = 9,
                            CourseID = 2,
                            CreatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1162),
                            OrderID = 4,
                            Quantity = 6,
                            UnitPrice = 100m
                        },
                        new
                        {
                            OrderDetailID = 10,
                            CourseID = 3,
                            CreatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1163),
                            OrderID = 4,
                            Quantity = 8,
                            UnitPrice = 100m
                        },
                        new
                        {
                            OrderDetailID = 11,
                            CourseID = 3,
                            CreatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1165),
                            OrderID = 4,
                            Quantity = 8,
                            UnitPrice = 100m
                        });
                });

            modelBuilder.Entity("Project1.Models.Payment", b =>
                {
                    b.Property<int>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentID"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentID");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("Project1.Models.Pet", b =>
                {
                    b.Property<int>("PetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PetID"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.Property<string>("PetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PetType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("PetID");

                    b.ToTable("Pet");
                });

            modelBuilder.Entity("Project1.Models.PetCategory", b =>
                {
                    b.Property<int>("PetCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PetCategoryID"));

                    b.Property<string>("PetCategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PetCategoryID");

                    b.ToTable("PetCategory");

                    b.HasData(
                        new
                        {
                            PetCategoryID = 1,
                            PetCategoryName = "狗"
                        },
                        new
                        {
                            PetCategoryID = 2,
                            PetCategoryName = "貓"
                        });
                });

            modelBuilder.Entity("Project1.Models.ShoppingCart", b =>
                {
                    b.Property<int>("CartID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartID"));

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MemberID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("CartID");

                    b.ToTable("Cart");

                    b.HasData(
                        new
                        {
                            CartID = 1,
                            CourseID = 1,
                            CreatedAt = new DateTime(2024, 5, 14, 8, 18, 6, 974, DateTimeKind.Utc).AddTicks(1034),
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("Project1.Models.Specialization", b =>
                {
                    b.Property<int>("SpecializationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpecializationID"));

                    b.Property<string>("SpecializationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SpecializationID");

                    b.ToTable("Specialization");

                    b.HasData(
                        new
                        {
                            SpecializationID = 1,
                            SpecializationName = "犬隻行為調教"
                        },
                        new
                        {
                            SpecializationID = 2,
                            SpecializationName = "貓咪行為諮詢"
                        },
                        new
                        {
                            SpecializationID = 3,
                            SpecializationName = "犬隻服從訓練"
                        },
                        new
                        {
                            SpecializationID = 4,
                            SpecializationName = "貓咪基礎訓練"
                        },
                        new
                        {
                            SpecializationID = 5,
                            SpecializationName = "犬隻行為改善"
                        },
                        new
                        {
                            SpecializationID = 6,
                            SpecializationName = "貓咪行為矯正"
                        },
                        new
                        {
                            SpecializationID = 7,
                            SpecializationName = "犬隻服從訓練"
                        },
                        new
                        {
                            SpecializationID = 8,
                            SpecializationName = "犬隻基礎訓練"
                        });
                });

            modelBuilder.Entity("Project1.Models.Trainer", b =>
                {
                    b.Property<int>("TrainerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrainerID"));

                    b.Property<string>("Experience")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qualifications")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpecializationID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrainerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TrainerID");

                    b.ToTable("Trainer");

                    b.HasData(
                        new
                        {
                            TrainerID = 1,
                            Experience = "具有10年專業犬隻訓練經驗",
                            MemberID = 1,
                            Qualifications = "認證專業犬隻訓練師 (CPDT-KA)",
                            SpecializationID = 1,
                            Status = "已審核",
                            TrainerName = "林宜萱"
                        },
                        new
                        {
                            TrainerID = 2,
                            Experience = "具有8年專業貓咪訓練經驗",
                            MemberID = 2,
                            Qualifications = "認證專業貓咪訓練與行為專家 (CFTBS)",
                            SpecializationID = 2,
                            Status = "已審核",
                            TrainerName = "吳偉昌"
                        },
                        new
                        {
                            TrainerID = 3,
                            Experience = "擁有15年專業狗隻訓練經驗",
                            MemberID = 3,
                            Qualifications = "認證專業犬隻訓練師 (CPDT-KA)",
                            SpecializationID = 1,
                            Status = "已審核",
                            TrainerName = "黃文彥"
                        },
                        new
                        {
                            TrainerID = 4,
                            Experience = "具有12年專業貓咪訓練經驗",
                            MemberID = 4,
                            Qualifications = "認證專業貓咪訓練師 (CPT-KA)",
                            SpecializationID = 2,
                            Status = "已審核",
                            TrainerName = "張明志"
                        },
                        new
                        {
                            TrainerID = 5,
                            Experience = "擁有8年專業狗隻服從訓練經驗",
                            MemberID = 5,
                            Qualifications = "認證專業狗隻訓練師 (CPDT-KA)",
                            SpecializationID = 3,
                            Status = "已審核",
                            TrainerName = "許淑惠"
                        },
                        new
                        {
                            TrainerID = 6,
                            Experience = "擁有10年專業貓咪基礎訓練經驗",
                            MemberID = 6,
                            Qualifications = "認證專業貓咪訓練師 (CPT-KA)",
                            SpecializationID = 4,
                            Status = "已審核",
                            TrainerName = "李志明"
                        },
                        new
                        {
                            TrainerID = 7,
                            Experience = "擁有7年專業狗隻行為改善經驗",
                            MemberID = 7,
                            Qualifications = "認證專業狗隻訓練師 (CPDT-KA)",
                            SpecializationID = 5,
                            Status = "已審核",
                            TrainerName = "徐宜真"
                        },
                        new
                        {
                            TrainerID = 8,
                            Experience = "擁有9年專業貓咪行為矯正經驗",
                            MemberID = 8,
                            Qualifications = "認證專業貓咪訓練師 (CPT-KA)",
                            SpecializationID = 6,
                            Status = "已審核",
                            TrainerName = "蔡文偉"
                        },
                        new
                        {
                            TrainerID = 9,
                            Experience = "擁有6年專業狗隻服從訓練經驗",
                            MemberID = 9,
                            Qualifications = "認證專業狗隻訓練師 (CPDT-KA)",
                            SpecializationID = 7,
                            Status = "已審核",
                            TrainerName = "楊宜真"
                        },
                        new
                        {
                            TrainerID = 10,
                            Experience = "擁有5年專業貓咪基礎訓練經驗",
                            MemberID = 10,
                            Qualifications = "認證專業貓咪訓練師 (CPT-KA)",
                            SpecializationID = 4,
                            Status = "已審核",
                            TrainerName = "陳志宏"
                        });
                });

            modelBuilder.Entity("Project1.Models.TrainerServiceArea", b =>
                {
                    b.Property<int>("TeachingAreaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeachingAreaID"));

                    b.Property<int>("LocationID")
                        .HasColumnType("int");

                    b.Property<int>("TrainerID")
                        .HasColumnType("int");

                    b.HasKey("TeachingAreaID");

                    b.ToTable("TrainerServiceArea");
                });
#pragma warning restore 612, 618
        }
    }
}
